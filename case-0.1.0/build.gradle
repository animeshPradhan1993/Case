/*buildscript {
  repositories {
    mavenLocal()
    mavenCentral()
  }
  dependencies {
    classpath "org.openapitools:openapi-generator-gradle-plugin:4.3.1"
 
    
  }
}*/

plugins {
    id 'org.springframework.boot' version '2.1.4.RELEASE'
    id "java-library"
    id "org.openapi.generator" version "4.3.1" 
    id "io.spring.dependency-management" version "1.0.6.RELEASE"
    id 'com.palantir.docker' version '0.33.0'
    id "com.palantir.docker-run" version "0.33.0"
  
    
}
apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'org.openapi.generator'

openApiMeta{
	packageName = "com.afkl.travel.exercise.config"
	generatorName = "spring"
}
springBoot {
  buildInfo()
}
repositories {
    mavenCentral()
}
//used this plugin to generate the server code
/*openApiGenerate{
	//dependsOn openApiMeta
    generatorName = "spring"
    inputSpec = "$rootDir/src/main/openapi/travel-api.yaml".toString()
    outputDir = "$rootDir".toString()
    //httpUserAgent = "OpenAPI-Generator/4.0.0/java"    
     apiPackage = "com.afkl.travel.exercise.api"
    invokerPackage = "com.afkl.travel.exercise.invoker"
    modelPackage = "com.afkl.travel.exercise.model"
    //modelFilesConstrainedTo = []
    configOptions = [
       dateLibrary: "java11"
      
    ]
}*/

ext{
    jacksonDatabindVersion = "0.2.1"
    jacksonVersion = "2.9.9"
    swaggerAnnotationsVersion = "1.5.22"
    springCloudVersion = 'Greenwich.RELEASE'
}

sourceCompatibility = 11
targetCompatibility = 11
def dockerOwner = 'Animesh'

version = '0.1.0'

dependencyManagement {
    imports {
        mavenBom org.springframework.boot.gradle.plugin.SpringBootPlugin.BOM_COORDINATES
       mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'org.springframework.cloud:spring-cloud-starter-sleuth'
    implementation 'com.h2database:h2'
    implementation 'org.springframework.boot:spring-boot-devtools'
    implementation "org.openapitools:jackson-databind-nullable:$jacksonDatabindVersion"
    implementation 'org.projectlombok:lombok:1.18.24'
    compile('io.swagger:swagger-core:1.5.20')
    implementation group: 'io.gsonfire', name: 'gson-fire', version: '1.7.1'
    implementation 'com.google.code.findbugs:jsr305:3.0.2'
    testCompile 'junit:junit:4.12'
    implementation "com.fasterxml.jackson.core:jackson-core:$jacksonVersion"
    implementation "com.fasterxml.jackson.core:jackson-annotations:$jacksonVersion"
    implementation "com.fasterxml.jackson.core:jackson-databind:$jacksonVersion"
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:$jacksonVersion"
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
  
    implementation 'org.springdoc:springdoc-openapi-ui:1.6.9'
      //  compile group: 'com.google.code.gson', name: 'gson', version: '2.8.5'
    //compile 'com.squareup.okhttp3:okhttp:3.4.1'
   // compile 'com.squareup.okhttp3:logging-interceptor:3.4.1'
    //compile('io.springfox:springfox-swagger2:2.9.2')
	//compile('io.springfox:springfox-swagger-ui:2.9.2') 
	 //  implementation "io.swagger:swagger-annotations:$swaggerAnnotationsVersion"
	  // runtimeOnly 'io.micrometer:micrometer-registry-prometheus:1.9.0'
   
    
}
    
 

task runSwaggerUI(type: Exec) {
    executable("docker")
    args('run'
        , '-p', '8050:8080'
        , '-e', "SWAGGER_JSON=/openapi/travel-api.yaml"
        , '-v', "$projectDir/src/main/openapi:/openapi"
        , 'swaggerapi/swagger-ui')
}

